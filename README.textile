h1. Selenium

Provides selenium webdriver support for play applications.

h2. Sample application

Under sample/sample-app you can find a simple selenium test example using the module.

h2. Configuration

So far only 2 configuration items must be added:

h3. test.selenium.browsers 

List of browsers you want the tests to be executed at

bc.  test.selenium.browsers=firefox,iexplorer,chrome,safari : 

h3. test.selenium.hub.url

Url of the selenium grid server

bc.  test.selenium.hub.url=http://localhost:4444/wd/hub

h2. Creating tests

Create your test as you would normally do using testng and extend the class @play.modules.selenium.custom.BaseTest@

Example:

bc. public class GoogleTest extends BaseTest {
    public GoogleTest(DesiredCapabilities cap, String hub) throws Exception {
        super(cap, hub);
    }
    @Test
    public void checkWebpage () {
        driver.get("http://www.google.com");
        driver.findElement(By.name("q")).sendKeys("Swets");
        driver.findElement(By.name("q")).submit();
        driver.close();
    }
}


h2. Running the tests

First start the server. You should run something like this:

@java -jar selenium-server-standalone-2.20.0.jar -role hub@

The start all the different nodes you want:

@java -jar selenium-server-standalone-2.20.0.jar -role node  -hub http://<selenium grid server>:4444/grid/register@

If you plan to use internet explorer browser on you test you need to be a little bit more specific when starting the node: 

@java -jar selenium-server-standalone-2.20.0.jar -role node -hub http://linux-workstation.swets.nl:4444/grid/register -browser "browserName=internet explorer,version=8,platform=WINDOWS"@

This is to workaround a bug on how selenium identifies the node's platform. "Issue 1699":http://code.google.com/p/selenium/issues/detail?id=1699&colspec=ID%20Stars%20Type%20Status%20Priority%20Milestone%20Owner%20Summary&start=200

And finally you can run your tests:

@ant runTestNG@
